name: Satel PR slack notifier
description: Notify devs on slack about the comments on their PR

inputs:
  SLACK_API_TOKEN:
    description: Slack token with permission users:read.email
    required: true
  SLACK_WEBHOOK_URL:
    description: Webhook for the slack app
    required: true
  GITHUB_TOKEN:
    description: token
    required: false
    

runs:
  using: "composite"
  steps:
    - name: Find PR author for the comment 
      run: |
            PR_NUMBER=$(echo "${{ github.event.issue.url }}" | awk -F'/' '{print $NF}')
            PR_AUTHOR=$(curl -s -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}" \
                        "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.repository }}/pulls/$PR_NUMBER" \
                        | jq -r '.user.login')
            
            echo "PR Author: $PR_AUTHOR"
          
          # # Extract owner, repo, and PR number from the repository URL
          # IFS='/' read -ra REPO_INFO <<<"${{ github.event.repository.url }}"
          # OWNER="${REPO_INFO[3]}"
          # REPO="${REPO_INFO[4]}"
          # PR_NUMBER="${{ github.event.issue.url | cut -d'/' -f7 }}"
          
          # # Retrieve the pull request information using the GitHub API
          # PR_AUTHOR=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          #             "https://api.github.com/repos/$OWNER/$REPO/pulls/$PR_NUMBER" \
          #             | jq -r '.user.login')
          
          # echo "PR Author: $PR_AUTHOR"
      shell: bash      
          
    # - name: Find slack user email
    #   run: |
    #     github_username=${{ github.event.pull_request.user.login }}${{ github.event.issue.user.login }}  #only one of this value is accessible at a time
    #     echo "PR author:"${{ github.event.issue.user.login }}
    #     echo "issue author:"${{ github.event.issue.user.login }}
    #     echo "Old PR author:"${{ github.event.pull_request.user.login }} 
     
    #     # Define mapping for frontend devs
    #     declare -A mapping=(
    #         [ZoeElizabeth]=zoe@satel.ca
    #         [shallow-and-limited]=alex@satel.ca
    #         [CaseyQWood]=casey@satel.ca
    #     )
    #     # Get Slack username
    #     slack_user_email=${mapping[$github_username]:-Unknown}
    #     if [ "$slack_user_email" != "Unknown" ]; then
    #       echo "slack_user_email_found=true" >> $GITHUB_ENV       
    #     fi
    #     echo "slack_user_email=$slack_user_email" >> $GITHUB_ENV
    #   shell: bash    
      
    # - name: Find Slack user based on the emails   
    #   id: find-slack-user
    #   if: ${{ env.slack_user_email_found == 'true' }}
    #   uses: scribd/find-slack-user-action@v1.0.4
    #   with:
    #     slack-token: ${{ inputs.SLACK_API_TOKEN }}
    #     email: ${{ env.slack_user_email }}
    #     include-at-symbol: true

    # - name: Get PR comment URL
    #   if: ${{ env.slack_user_email_found == 'true' }}
    #   id: get-comment
    #   env:
    #     GH_TOKEN: ${{ github.token }}
    #   run: |
    #     if [ "${{ github.event_name }}" == "issue_comment" ]; then
    #       ISSUE_NUMBER="${{ github.event.issue.number }}"
    #       event_name='issues'
    #     else
    #       ISSUE_NUMBER="${{ github.event.pull_request.number }}"
    #       event_name='pulls'
    #     fi
        
    #     last_comment_url=$(gh api \
    #         -H "Accept: application/vnd.github+json" \
    #         -H "X-GitHub-Api-Version: 2022-11-28" \
    #         "/repos/${{ github.repository }}/$event_name/$ISSUE_NUMBER/comments" --jq '.[-1].html_url')
    #     echo "last_comment_url=$last_comment_url" >> $GITHUB_ENV
    #   shell: bash

    # - name: Slack notification
    #   if: ${{ env.slack_user_email_found == 'true' }}
    #   uses: 8398a7/action-slack@v3
    #   with:
    #     status: custom
    #     custom_payload: |
    #       {
    #           "blocks": [
    #           {
    #             "type": "section",
    #             "text": {
    #               "type": "mrkdwn",
    #               "text": "Hi ${{ steps.find-slack-user.outputs.username }}, there's a comment on your PR. Please review it. Here's the <${{ env.last_comment_url }}|link>"
    #             }
    #           }
    #         ]
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
